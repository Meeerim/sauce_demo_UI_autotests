{"name": "test_add_product_to_cart", "status": "failed", "statusDetails": {"message": "selene.core.exceptions.TimeoutException: Message: \n\nTimed out after 2.0s, while waiting for:\nbrowser.element(('xpath', '//a[@id=\"item_2_title_link\"]/div[@class=\"inventory_item_name\"]')).has texts ('Sauce Labs Onesie',)\n\nReason: TypeError: 'WebElement' object is not iterable\nScreenshot: file://C:\\Users\\skmee\\.selene\\screenshots\\1690622336612\\1690622336613.png\nPageSource: file://C:\\Users\\skmee\\.selene\\screenshots\\1690622336612\\1690622336613.html", "trace": "fn = <selene.core.conditions.CollectionCondition object at 0x0000023C9B1AA510>\n\n    @self._decorator(self)\n    def _(fn: Callable[[E], R]) -> R:\n        finish_time = time.time() + self._timeout\n    \n        while True:\n            try:\n>               return fn(self.entity)\n\n..\\..\\..\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\selene\\core\\wait.py:122: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selene.core.conditions.CollectionCondition object at 0x0000023C9B1AA510>\nentity = <selene.core.entity.Element object at 0x0000023C9B1AA250>\n\n    def __call__(self, entity: E) -> None:\n>       return self._fn(entity)\n\n..\\..\\..\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\selene\\core\\condition.py:174: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nentity = <selene.core.entity.Element object at 0x0000023C9B1AA250>\n\n    def fn(entity: E) -> None:\n        query_to_str = str(query)\n        result = (\n            query.__name__\n            if query_to_str.startswith('<function')\n            else query_to_str\n        )\n>       actual = query(entity)\n\n..\\..\\..\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\selene\\core\\condition.py:145: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\ncollection = <selene.core.entity.Element object at 0x0000023C9B1AA250>\n\n    def visible_texts(collection: Collection) -> List[str]:\n>       return [\n            webelement.text\n            for webelement in collection()\n            if webelement.is_displayed()\n        ]\nE       TypeError: 'WebElement' object is not iterable\n\n..\\..\\..\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\selene\\core\\match.py:393: TypeError\n\nDuring handling of the above exception, another exception occurred:\n\nlogin = <sauce_demo_UI_autotests.model.application.Application object at 0x0000023C9AE86C50>\n\n    @allure.tag(\"web\")\n    @allure.feature(f'Add Product to Cart')\n    @allure.story(\"Verify that users can add items to the cart and the cart updates accordingly.\")\n    def test_add_product_to_cart(login):\n        with allure.step(\"From main page find the cheapest item and  to the cart\"):\n            app.main_page.open_homepage().\\\n                filter_by_price().\\\n                add_to_cart_cheapest_product()\n        with allure.step(\"Verify that the number of items in the cart has increased by one\"):\n>           app.cart_page.open().verify_product_added()\n\ntest_cart_page.py:15: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n..\\sauce_demo_UI_autotests\\model\\pages\\cart_page.py:11: in verify_product_added\n    browser.element('//a[@id=\"item_2_title_link\"]/div[@class=\"inventory_item_name\"]').should(have.texts(\"Sauce Labs Onesie\"))\n..\\..\\..\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\selene\\core\\entity.py:594: in should\n    super().should(condition)\n..\\..\\..\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\selene\\core\\entity.py:127: in should\n    self.wait.for_(condition)\n..\\..\\..\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\selene\\core\\wait.py:147: in for_\n    return _(fn)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nfn = <selene.core.conditions.CollectionCondition object at 0x0000023C9B1AA510>\n\n    @self._decorator(self)\n    def _(fn: Callable[[E], R]) -> R:\n        finish_time = time.time() + self._timeout\n    \n        while True:\n            try:\n                return fn(self.entity)\n            except Exception as reason:\n                if time.time() > finish_time:\n    \n                    reason_message = str(reason)\n    \n                    reason_string = '{name}: {message}'.format(\n                        name=reason.__class__.__name__,\n                        message=reason_message,\n                    )\n                    # todo: think on how can we improve logging failures in selene, e.g. reverse msg and stacktrace\n                    # stacktrace = getattr(reason, 'stacktrace', None)\n                    timeout = self._timeout\n                    entity = self.entity\n    \n                    failure = TimeoutException(\n                        f'\\n'\n                        f'\\nTimed out after {timeout}s, while waiting for:'\n                        f'\\n{entity}.{fn}'\n                        f'\\n'\n                        f'\\nReason: {reason_string}'\n                    )\n    \n>                   raise self._hook_failure(failure)\nE                   selene.core.exceptions.TimeoutException: Message: \nE                   \nE                   Timed out after 2.0s, while waiting for:\nE                   browser.element(('xpath', '//a[@id=\"item_2_title_link\"]/div[@class=\"inventory_item_name\"]')).has texts ('Sauce Labs Onesie',)\nE                   \nE                   Reason: TypeError: 'WebElement' object is not iterable\nE                   Screenshot: file://C:\\Users\\skmee\\.selene\\screenshots\\1690622336612\\1690622336613.png\nE                   PageSource: file://C:\\Users\\skmee\\.selene\\screenshots\\1690622336612\\1690622336613.html\n\n..\\..\\..\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\selene\\core\\wait.py:145: TimeoutException"}, "steps": [{"name": "From main page find the cheapest item and  to the cart", "status": "passed", "start": 1690622349287, "stop": 1690622350231}, {"name": "Verify that the number of items in the cart has increased by one", "status": "failed", "statusDetails": {"message": "selene.core.exceptions.TimeoutException: Message: \n\nTimed out after 2.0s, while waiting for:\nbrowser.element(('xpath', '//a[@id=\"item_2_title_link\"]/div[@class=\"inventory_item_name\"]')).has texts ('Sauce Labs Onesie',)\n\nReason: TypeError: 'WebElement' object is not iterable\nScreenshot: file://C:\\Users\\skmee\\.selene\\screenshots\\1690622336612\\1690622336613.png\nPageSource: file://C:\\Users\\skmee\\.selene\\screenshots\\1690622336612\\1690622336613.html\n\n", "trace": "  File \"C:\\Users\\skmee\\PycharmProjects\\sauce_demo_UI_autotests\\tests\\test_cart_page.py\", line 15, in test_add_product_to_cart\n    app.cart_page.open().verify_product_added()\n  File \"C:\\Users\\skmee\\PycharmProjects\\sauce_demo_UI_autotests\\sauce_demo_UI_autotests\\model\\pages\\cart_page.py\", line 11, in verify_product_added\n    browser.element('//a[@id=\"item_2_title_link\"]/div[@class=\"inventory_item_name\"]').should(have.texts(\"Sauce Labs Onesie\"))\n  File \"C:\\Users\\skmee\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\selene\\core\\entity.py\", line 594, in should\n    super().should(condition)\n  File \"C:\\Users\\skmee\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\selene\\core\\entity.py\", line 127, in should\n    self.wait.for_(condition)\n  File \"C:\\Users\\skmee\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\selene\\core\\wait.py\", line 147, in for_\n    return _(fn)\n           ^^^^^\n  File \"C:\\Users\\skmee\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\selene\\core\\wait.py\", line 145, in _\n    raise self._hook_failure(failure)\n"}, "start": 1690622350231, "stop": 1690622352664}], "start": 1690622349285, "stop": 1690622352672, "uuid": "d499738a-664d-4def-aa05-cf803b74c4d8", "historyId": "5f49604ed81b35e667d16c534876c103", "testCaseId": "45712f94275279a0d7954510f493ad53", "fullName": "tests.test_cart_page#test_add_product_to_cart", "labels": [{"name": "feature", "value": "Add Product to Cart"}, {"name": "tag", "value": "web"}, {"name": "story", "value": "Verify that users can add items to the cart and the cart updates accordingly."}, {"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_cart_page"}, {"name": "host", "value": "LAPTOP-OFQSKCIR"}, {"name": "thread", "value": "15076-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_cart_page"}]}